@using NorthOps.Services.Helpers
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "BreaksGridView";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "Break", Action = "BreaksGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Break", Action = "BreaksGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Break", Action = "BreaksGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Break", Action = "BreaksGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        if (User.IsInRoles("Team Leader", "Administrator"))
        {
            settings.Settings.ShowFilterRow = true;
        }
        else
        {
            settings.Settings.ShowFilterRow = false;
        }
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 300;
        if (User.IsInRoles("Team Leader", "Administrator"))
        {
            settings.Columns.Add(col => { col.FieldName = "Users.FullName";
                col.ColumnType = MVCxGridViewColumnType.ComboBox;
                var cbo = col.PropertiesEdit as ComboBoxProperties;
                cbo.DataSource = new UnitOfWork().UserRepository.Get(m=>m.UserRoles.Any(x=>x.Name== "Employee"));
                cbo.TextField = "FullName";
                cbo.ValueField= "FullName";

            });
        }
        settings.Columns.Add("BreakTypes.BreakType");
        settings.Columns.Add("StartTime");
        settings.Columns.Add("EndTime"); settings.Columns.Add("TotalTime");
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()