@using System.Web.UI.WebControls;
@using NorthOps.Ops.Repository;

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "QuestionGrid_" + ViewBag.ExamId;
        settings.CallbackRouteValues = new
        {
            Controller = "Exam",
            Action = "QuestionGridPartial",
            examId = ViewBag.ExamId
        };
        settings.ClientSideEvents.Init = "function(s,e){GridName=s;console.log(GridName); }";
        settings.SettingsDetail.MasterGridName = "ExamGridPartial";
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Exam", Action = "QuestionGridPartialAddNew", examId = ViewBag.ExamId };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Exam", Action = "QuestionGridPartialUpdate", examId = ViewBag.ExamId };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Exam", Action = "QuestionGridPartialDelete", examId = ViewBag.ExamId };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "QuestionId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Left;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 300;

        settings.Columns.Add("Title");
        settings.Columns.Add("Question").Caption = "Question";
        settings.Columns.Add("Number");

        settings.SettingsDetail.ShowDetailRow = true;
        settings.SetDetailRowTemplateContent(c =>
        {
    //Html.RenderAction("gvUsersPartial", new { SubscriptionId = DataBinder.Eval(c.DataItem, "SubscriptionId") });

    Html.RenderAction("ChoiceGridViewPartial", new { QuestionId = DataBinder.Eval(c.DataItem, "QuestionId"), ExamId = ViewBag.ExamId });

        });
        settings.SetEditFormTemplateContent(c =>
        {
            var item = ViewData["item"] ?? c.DataItem;
            try
            {
                Html.RenderAction("QuestionAddEditPartial", new { QuestionId = DataBinder.Eval(c.DataItem, "QuestionId"), ExamId = ViewBag.ExamId });
            }
            catch (Exception)
            {

                Html.RenderAction("QuestionAddEditPartial", new { ExamId = ViewBag.ExamId });

            }
            Html.DevExpress().Button(btn =>
            {
                btn.Text = "Save";
                btn.Name = "btnSave";
                btn.ClientSideEvents.Click = "function(s,e){GridName.UpdateEdit();}";
            }).GetHtml();
            Html.DevExpress().Button(btn =>
            {
                btn.Text = "Cancel";
                btn.Name = "btnCancel";
                btn.ClientSideEvents.Click = "function(s,e){GridName.CancelEdit();}";
                btn.Style.Add(HtmlTextWriterStyle.MarginLeft, "5px");
            }).GetHtml();
        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
<script>
    var GridName;
</script>