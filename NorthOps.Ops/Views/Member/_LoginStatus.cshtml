@model LoginStatusModel

<li class="dropdown user user-menu">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
        @*<img src="~/Content/img/user.jpg" class="user-image" alt="User Image">*@
        @Html.DevExpress().BinaryImageFor(m => m.Photo, set => { set.Name = "Thumb"; set.ControlStyle.CssClass = "user-image"; }).GetHtml()
        
        <span class="hidden-xs">@Html.DisplayTextFor(m => m.Name)</span>
    </a>
    <ul class="dropdown-menu">
        <li class="user-header">
            @*<img src="~/Content/img/user.jpg" class="img-circle" alt="User Image">*@
            @Html.DevExpress().BinaryImageFor(m => m.Photo, set => { set.Name = "Photo"; set.ControlStyle.CssClass = "img-circle"; }).GetHtml()
            <p>
                @Html.DisplayTextFor(m => m.Name)<br />
                @Html.DisplayTextFor(m => m.Position)
                @if (Model.HireDate != null) {
                    <small>Member since @Html.DisplayTextFor(m => m.HireDate.Value.Year)</small>
                }
                
            </p>
        </li>
        
        <li class="user-footer">
            <div class="pull-left">
                <a href="@Url.Action("profile","member")" class="btn btn-default btn-flat">Profile</a>
            </div>
            <div class="pull-right">
                @using (Html.BeginForm("logoff", "member", FormMethod.Post, new { id = "logoutForm" })) {
                    @Html.AntiForgeryToken()
                    <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-default btn-flat">Sign out</a>
                }



            </div>
        </li>
    </ul>
</li>