@model LoginModel
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Login.cshtml";
}


<div class="login-box-body">
    <p class="login-box-msg">Sign in to access your account.</p>


    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="has-feedback">
            @Html.DevExpress().TextBoxFor(m => m.Email,
                settings => {
                    settings.Name = "Email";
                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settings.Properties.NullText = "Email Address";
                    settings.ControlStyle.CssClass = "form-control";
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Properties.ValidationSettings.ErrorImage.Url = "~/content/img/error-mail.png";
                }).GetHtml()
            <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
            @*@Html.ValidationMessageFor(m => m.Email)*@
        </div>
        <div class="has-feedback">
            @Html.DevExpress().TextBoxFor(m => m.Password,
                settings => {
                    settings.Name = "Password";
                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settings.Properties.NullText = "Password";
                    settings.ControlStyle.CssClass = "form-control";
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true; settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Properties.ValidationSettings.ErrorImage.Url = "~/content/img/error-mail.png"; settings.Properties.Password = true;
                }).GetHtml()

            <span class="glyphicon glyphicon-lock form-control-feedback"></span>

            @*@Html.ValidationMessageFor(m => m.Password)*@
            @Html.DevExpress().CheckBoxFor(m => m.RememberMe, ch => {
           ch.Name = "RememberMe"; ch.Text = "Remember Me"; ch.Properties.AllowGrayed = false;
           ch.PreRender = (sender, e) => {
               ASPxCheckBox chk = (ASPxCheckBox)sender;
               chk.CheckState = CheckState.Unchecked;
           };
       }).GetHtml()
        </div>
        <br />
        <button class="btn btn-primary btn-block">Sign In</button>
    }


    
</div>